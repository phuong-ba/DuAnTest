/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Application.Formm;

import Model.KhachHangModel;
import Repository.KhachHangRepo;
import java.awt.BorderLayout;
import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import javax.management.modelmbean.ModelMBean;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Admin
 */
public class KhachHang extends javax.swing.JPanel {

    /**
     * Creates new form KhachHang
     */
    private KhachHangRepo repoKH = new KhachHangRepo();
    private int selectedIdSP = -1;

    public KhachHang() {
        initComponents();

        txtIDKH.setEditable(false);
        txtMaKH.setEditable(false);
        loadTable();
        loadTableKHXoa();
    }

    public void loadTable() {
        DefaultTableModel model = (DefaultTableModel) tblKhachHang.getModel();
        model.setRowCount(0); // Xóa dữ liệu cũ trong bảng

        // Lấy danh sách khách hàng từ repository
        List<Model.KhachHangModel> listKhachHang = this.repoKH.getAllKhachHang();

        for (Model.KhachHangModel kh : listKhachHang) {
            Object[] rowData = {
                kh.getId(),
                kh.getMaKH(),
                kh.getTenKH(),
                kh.getGioiTinhKH() ? "Nam" : "Nữ",
                kh.getSdtKH(),
                kh.getDiaChiKH(),};

            // Thêm dữ liệu vào bảng
            model.addRow(rowData);
        }
        rdoNam.setSelected(true);
        rdoNu.setSelected(false);
    }

    public void loadTableKHXoa() {
        DefaultTableModel model = (DefaultTableModel) tblKhachHangXoa.getModel();
        model.setRowCount(0); // Xóa dữ liệu cũ trong bảng

        // Lấy danh sách khách hàng từ repository
        List<Model.KhachHangModel> listKhachHang = this.repoKH.getAllKhachHangXoa();

        for (Model.KhachHangModel kh : listKhachHang) {
            Object[] rowData = {
                kh.getId(),
                kh.getMaKH(),
                kh.getTenKH(),
                kh.getSdtKH(),
                kh.getGioiTinhKH() ? "Nam" : "Nữ",
                kh.getDiaChiKH(),};

            // Thêm dữ liệu vào bảng
            model.addRow(rowData);
        }
        rdoNam.setSelected(true);
        rdoNu.setSelected(false);
    }

    public void xoaFrom() {
        // Xóa nội dung của các ô nhập liệu
        txtIDKH.setText("");
        txtMaKH.setText("");
        txtHoTen.setText("");
        txtSDT.setText("");
        txtDiaChi.setText("");

        // Đặt lại radio button về mặc định (ví dụ: Nam)
        rdoNam.setSelected(true);
        rdoNu.setSelected(false);

        // Bỏ chọn dòng trong bảng nếu có
        tblKhachHang.clearSelection();
    }

    private void updateTableKhachHang(String keyword, String gioiTinh) {
        DefaultTableModel model = (DefaultTableModel) tblKhachHang.getModel();
        model.setRowCount(0); // Xóa dữ liệu cũ

        ArrayList<KhachHangModel> list = repoKH.searchKhachHang(keyword, gioiTinh);
        for (KhachHangModel kh : list) {
            model.addRow(new Object[]{
                kh.getId(),
                kh.getMaKH(),
                kh.getTenKH(),
                kh.getGioiTinhKH() ? "Nam" : "Nữ",
                kh.getSdtKH(),
                kh.getDiaChiKH()
            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        txtTimKhachHang = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtSDT = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtHoTen = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtMaKH = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtDiaChi = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        rdoNam = new javax.swing.JRadioButton();
        rdoNu = new javax.swing.JRadioButton();
        txtIDKH = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        btnLamMoi = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnThem = new javax.swing.JButton();
        cbbLocNamNu = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblKhachHang = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblKhachHangXoa = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        txtTimKhachHang.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKhachHangKeyReleased(evt);
            }
        });

        jLabel1.setText("Tìm kiếm");

        jLabel5.setText("SDT");

        jLabel4.setText("Ho Ten");

        jLabel8.setText("Ma Khách Hàng");

        jLabel6.setText("Địa Chỉ");

        jLabel7.setText("Giới tính ");

        buttonGroup1.add(rdoNam);
        rdoNam.setText("Nam");

        buttonGroup1.add(rdoNu);
        rdoNu.setText("Nu");

        jLabel9.setText("ID Khach Hang");

        btnLamMoi.setText("Làm Mới");
        btnLamMoi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLamMoiMouseClicked(evt);
            }
        });

        btnXoa.setText("Xóa");
        btnXoa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnXoaMouseClicked(evt);
            }
        });

        btnSua.setText("Sửa");
        btnSua.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSuaMouseClicked(evt);
            }
        });

        btnThem.setText("Thêm");
        btnThem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnThemMouseClicked(evt);
            }
        });

        cbbLocNamNu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất Cả", "Nam", "Nữ" }));
        cbbLocNamNu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbbLocNamNuMouseClicked(evt);
            }
        });
        cbbLocNamNu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbLocNamNuActionPerformed(evt);
            }
        });

        jLabel2.setText("Lọc");

        tblKhachHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Khach Hang", "Ma Khach Hang", "Ho Ten", "Gioi Tinh", "SDT", "Địa chỉ"
            }
        ));
        tblKhachHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblKhachHangMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblKhachHang);

        jButton2.setText("reset");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(544, 544, 544)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbbLocNamNu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtIDKH, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMaKH, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(rdoNam)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(96, 96, 96)
                                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(131, 131, 131)
                        .addComponent(btnLamMoi))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 759, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTimKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(333, 333, 333)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(27, 27, 27)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtSDT, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                                            .addComponent(txtHoTen))))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(61, 61, 61)
                                        .addComponent(rdoNu))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTimKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jButton2))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(21, 21, 21)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMaKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(rdoNam)
                    .addComponent(jLabel7)
                    .addComponent(rdoNu))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtIDKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem)
                    .addComponent(btnSua)
                    .addComponent(btnXoa)
                    .addComponent(btnLamMoi))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbbLocNamNu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Khách Hàng", jPanel2);

        tblKhachHangXoa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "STT", "MãKH", "TênKH", "SDT", "Giới Tính", "Địa Chỉ"
            }
        ));
        tblKhachHangXoa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblKhachHangXoaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblKhachHangXoa);

        jButton1.setText("Khôi Phục");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jButton3.setText("reset");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 696, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(170, 170, 170))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton3)
                .addGap(23, 23, 23)
                .addComponent(jButton1)
                .addGap(64, 64, 64)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(294, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Khách Hàng Đã Xóa", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblKhachHangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblKhachHangMouseClicked
        int selectedRow = tblKhachHang.getSelectedRow();
        if (selectedRow != -1) {
            String idKh = tblKhachHang.getValueAt(selectedRow, 0).toString();
            String maKh = tblKhachHang.getValueAt(selectedRow, 1).toString();
            String tenKh = tblKhachHang.getValueAt(selectedRow, 2).toString();
            String GioiTinhKH = tblKhachHang.getValueAt(selectedRow, 3).toString();
            String sdtKH = tblKhachHang.getValueAt(selectedRow, 4).toString();
            String DiaChiKH = tblKhachHang.getValueAt(selectedRow, 5).toString();
            txtIDKH.setText(idKh);
            txtMaKH.setText(maKh);
            txtHoTen.setText(tenKh);
            txtSDT.setText(sdtKH);
            txtDiaChi.setText(DiaChiKH);
            rdoNam.setSelected(GioiTinhKH.equalsIgnoreCase("Nam"));
            rdoNu.setSelected(GioiTinhKH.equalsIgnoreCase("Nữ"));
        }
    }//GEN-LAST:event_tblKhachHangMouseClicked

    private void btnThemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThemMouseClicked

        try {
            String tenKH = txtHoTen.getText().trim();
            String sdtKH = txtSDT.getText().trim();
            String diaChiKH = txtDiaChi.getText().trim();
            boolean gioiTinhKH = rdoNam.isSelected();

            // Kiểm tra xem các trường thông tin có trống hay không
            if (tenKH.isEmpty() || sdtKH.isEmpty() || diaChiKH.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin!");
                return;
            }

            // Kiểm tra số điện thoại: phải là số, có 10 ký tự, bắt đầu là số 0
            if (!sdtKH.matches("^0\\d{9}$")) {
                JOptionPane.showMessageDialog(this, "Số điện thoại phải là số, có 10 ký tự và bắt đầu bằng số 0.");
                return;
            }
            //------------------------------------------------

            // Kiểm tra khoảng trắng liên tục (2 dấu cách trở lên giữa các từ)
            if (tenKH.contains("  ")) {
                JOptionPane.showMessageDialog(this, "Họ tên không được chứa khoảng trắng liên tục.");
                return;
            }

            // Kiểm tra có chứa số không
            if (tenKH.matches(".*\\d.*")) {
                JOptionPane.showMessageDialog(this, "Họ tên không được chứa số.");
                return;
            }

            // Kiểm tra có chứa ký tự đặc biệt không (trừ dấu cách)
            if (!tenKH.matches("^[a-zA-ZàáạảãâầấậẩẫăằắặẳẵèéẹẻẽêềếệểễìíịỉĩòóọỏõôồốộổỗơờớợởỡùúụủũưừứựửữỳýỵỷỹđÀÁẠẢÃÂẦẤẬẨẪĂẰẮẶẲẴÈÉẸẺẼÊỀẾỆỂỄÌÍỊỈĨÒÓỌỎÕÔỒỐỘỔỖƠỜỚỢỞỠÙÚỤỦŨƯỪỨỰỬỮỲÝỴỶỸĐ ]+$")) {
                JOptionPane.showMessageDialog(this, "Họ tên không được chứa ký tự đặc biệt.");
                return;
            }
            //---------------------------------------------------

            // Kiểm tra khoảng trắng liên tục
            if (diaChiKH.contains("  ")) {
                JOptionPane.showMessageDialog(this, "Địa chỉ không được chứa khoảng trắng liên tục.");
                return;
            }

            // Kiểm tra có chứa ký tự đặc biệt ngoài (dấu chấm, dấu phẩy, dấu gạch,số)còn ký tự khác không được
            if (!diaChiKH.matches("^[a-zA-Z0-9àáạảãâầấậẩẫăằắặẳẵèéẹẻẽêềếệểễìíịỉĩòóọỏõôồốộổỗơờớợởỡùúụủũưừứựửữỳýỵỷỹđÀÁẠẢÃÂẦẤẬẨẪĂẰẮẶẲẴÈÉẸẺẼÊỀẾỆỂỄÌÍỊỈĨÒÓỌỎÕÔỒỐỘỔỖƠỜỚỢỞỠÙÚỤỦŨƯỪỨỰỬỮỲÝỴỶỸĐ0-9 ,.-]+$")) {
                JOptionPane.showMessageDialog(this, "Địa chỉ không được chứa ký tự đặc biệt (ngoài dấu chấm, dấu phẩy và dấu gạch ngang)");
                return;
            }

            // Kiểm tra số điện thoại đã tồn tại trong cơ sở dữ liệu
            if (repoKH.existsPhoneNumber(sdtKH)) {
                JOptionPane.showMessageDialog(this, "Số điện thoại đã tồn tại! Vui lòng nhập số khác.");
                return;
            }

            // Create a customer object
            KhachHangModel kh = new KhachHangModel(tenKH, gioiTinhKH, sdtKH, diaChiKH);

            // Thêm vào cơ sở dữ liệu qua repository
            this.repoKH.insertKhachHang(kh);

            // Tải lại bảng sau khi thêm khách hàng mới
            JOptionPane.showMessageDialog(this, "Thêm khách hàng thành công!");
            this.loadTable();
            xoaFrom();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Thêm khách hàng thất bại!");
        }

    }//GEN-LAST:event_btnThemMouseClicked

    private void btnSuaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSuaMouseClicked
        try {
            // Lấy chỉ mục hàng được chọn trong bảng
            int selectedRow = tblKhachHang.getSelectedRow();
            if (selectedRow == -1) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn khách hàng cần sửa!");
                return;
            }

            // Lấy số điện thoại khách hàng từ bảng
            int idKh = Integer.parseInt(tblKhachHang.getValueAt(selectedRow, 0).toString());

            // Lấy thông tin từ form
            String maKh = txtMaKH.getText().trim();
            String tenKH = txtHoTen.getText().trim();
            String sdtKH = txtSDT.getText().trim();
            String diaChiKH = txtDiaChi.getText().trim();
            boolean gioiTinhKH = rdoNam.isSelected();

            // Kiểm tra dữ liệu có bị trống không
            if (tenKH.isEmpty() || sdtKH.isEmpty() || diaChiKH.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin!");
                return;
            }

            // Kiểm tra số điện thoại: phải là số, có 10 ký tự, bắt đầu là số 0
            if (!sdtKH.matches("^0\\d{9}$")) {
                JOptionPane.showMessageDialog(this, "Số điện thoại phải là số, có 10 ký tự và bắt đầu bằng số 0.");
                return;
            }
            //------------------------------------------------

            // Kiểm tra khoảng trắng liên tục (2 dấu cách trở lên giữa các từ)
            if (tenKH.contains("  ")) {
                JOptionPane.showMessageDialog(this, "Họ tên không được chứa khoảng trắng liên tục.");
                return;
            }

            // Kiểm tra có chứa số không
            if (tenKH.matches(".*\\d.*")) {
                JOptionPane.showMessageDialog(this, "Họ tên không được chứa số.");
                return;
            }

            // Kiểm tra có chứa ký tự đặc biệt không (trừ dấu cách)
            if (!tenKH.matches("^[a-zA-ZàáạảãâầấậẩẫăằắặẳẵèéẹẻẽêềếệểễìíịỉĩòóọỏõôồốộổỗơờớợởỡùúụủũưừứựửữỳýỵỷỹđÀÁẠẢÃÂẦẤẬẨẪĂẰẮẶẲẴÈÉẸẺẼÊỀẾỆỂỄÌÍỊỈĨÒÓỌỎÕÔỒỐỘỔỖƠỜỚỢỞỠÙÚỤỦŨƯỪỨỰỬỮỲÝỴỶỸĐ ]+$")) {
                JOptionPane.showMessageDialog(this, "Họ tên không được chứa ký tự đặc biệt.");
                return;
            }
            //---------------------------------------------------

            // Kiểm tra khoảng trắng liên tục
            if (diaChiKH.contains("  ")) {
                JOptionPane.showMessageDialog(this, "Địa chỉ không được chứa khoảng trắng liên tục.");
                return;
            }

            // Kiểm tra có chứa ký tự đặc biệt ngoài (dấu chấm, dấu phẩy, dấu gạch,số)còn ký tự khác không được
            if (!diaChiKH.matches("^[a-zA-Z0-9àáạảãâầấậẩẫăằắặẳẵèéẹẻẽêềếệểễìíịỉĩòóọỏõôồốộổỗơờớợởỡùúụủũưừứựửữỳýỵỷỹđÀÁẠẢÃÂẦẤẬẨẪĂẰẮẶẲẴÈÉẸẺẼÊỀẾỆỂỄÌÍỊỈĨÒÓỌỎÕÔỒỐỘỔỖƠỜỚỢỞỠÙÚỤỦŨƯỪỨỰỬỮỲÝỴỶỸĐ0-9 ,.-]+$")) {
                JOptionPane.showMessageDialog(this, "Địa chỉ không được chứa ký tự đặc biệt (ngoài dấu chấm, dấu phẩy và dấu gạch ngang)");
                return;
            }

            // Kiểm tra số điện thoại đã tồn tại nhưng không phải của khách hàng hiện tại
            if (repoKH.existsPhoneNumber(sdtKH) && !sdtKH.equals(tblKhachHang.getValueAt(selectedRow, 3).toString())) {
                JOptionPane.showMessageDialog(this, "Số điện thoại đã tồn tại! Vui lòng nhập số khác.");
                return;
            }

            // Create a customer object
            KhachHangModel kh = new KhachHangModel(idKh, maKh, tenKH, gioiTinhKH, sdtKH, diaChiKH);

            // Cập nhật thông tin khách hàng
            kh.setTenKH(tenKH);
            kh.setGioiTinhKH(gioiTinhKH);
            kh.setSdtKH(sdtKH);
            kh.setDiaChiKH(diaChiKH);

            // Lưu cập nhật vào database
            repoKH.updateKhachHang(kh);

            JOptionPane.showMessageDialog(this, "Cập nhật khách hàng thành công!");
            xoaFrom();
            // Tải lại bảng sau khi cập nhật
            this.loadTable();

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Cập nhật khách hàng thất bại!");
        }

    }//GEN-LAST:event_btnSuaMouseClicked

    private void btnXoaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnXoaMouseClicked
        // TODO add your handling code here:
        try {
            // Lấy chỉ mục hàng được chọn trong bảng
            int selectedRow = tblKhachHang.getSelectedRow();
            if (selectedRow == -1) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn khách hàng cần xóa!");
                return;
            }

            // Lấy số điện thoại khách hàng từ bảng
            int idKh = Integer.parseInt(tblKhachHang.getValueAt(selectedRow, 0).toString());

            // Xác nhận trước khi xóa
            int confirm = JOptionPane.showConfirmDialog(this,
                    "Bạn có chắc chắn muốn xóa khách hàng này?",
                    "Xác nhận xóa", JOptionPane.YES_NO_OPTION);

            if (confirm != JOptionPane.YES_OPTION) {
                return; // Nếu chọn "No" thì không làm gì cả
            }

            // Gọi repository để xóa khách hàng
            if (repoKH.deleteKhachHang(idKh)) {
                JOptionPane.showMessageDialog(this, "Xóa khách hàng thành công!");
                this.loadTable(); // Cập nhật lại bảng
                xoaFrom();

            } else {
                JOptionPane.showMessageDialog(this, "Xóa khách hàng thất bại!");
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Đã xảy ra lỗi khi xóa khách hàng!");
        }
    }//GEN-LAST:event_btnXoaMouseClicked

    private void btnLamMoiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLamMoiMouseClicked
        // Xóa nội dung của các ô nhập liệu
        txtIDKH.setText("");
        txtMaKH.setText("");
        txtHoTen.setText("");
        txtSDT.setText("");
        txtDiaChi.setText("");

        // Đặt lại radio button về mặc định (ví dụ: Nam)
        rdoNam.setSelected(true);
        rdoNu.setSelected(false);

        // Bỏ chọn dòng trong bảng nếu có
        tblKhachHang.clearSelection();
    }//GEN-LAST:event_btnLamMoiMouseClicked

    private void txtTimKhachHangKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKhachHangKeyReleased
        String timKiem = txtTimKhachHang.getText().trim();
        String gioiTinh = (String) cbbLocNamNu.getSelectedItem();
        updateTableKhachHang(timKiem, gioiTinh);
    }//GEN-LAST:event_txtTimKhachHangKeyReleased

    private void cbbLocNamNuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbbLocNamNuMouseClicked

    }//GEN-LAST:event_cbbLocNamNuMouseClicked

    private void cbbLocNamNuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbLocNamNuActionPerformed
        String keyword = txtTimKhachHang.getText().trim();
        String gioiTinh = (String) cbbLocNamNu.getSelectedItem();
        updateTableKhachHang(keyword, gioiTinh);
    }//GEN-LAST:event_cbbLocNamNuActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        if (selectedIdSP == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn khách hàng cần khôi phục!");
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn khôi phục khách hàng này?", "Xác nhận", JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            if (repoKH.KhoiPhucKhachHang(selectedIdSP)) {
                JOptionPane.showMessageDialog(this, "Khôi phục khách hàng thành công!");
                selectedIdSP = -1;
                loadTableKHXoa();
            } else {
                JOptionPane.showMessageDialog(this, "Khôi phục khách hàng thất bại!");
            }
        }
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        loadTable();
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        loadTableKHXoa();
    }//GEN-LAST:event_jButton3MouseClicked

    private void tblKhachHangXoaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblKhachHangXoaMouseClicked
        int selectedRow = tblKhachHangXoa.getSelectedRow();
        if (selectedRow != -1) {
            selectedIdSP = (int) tblKhachHangXoa.getValueAt(selectedRow, 0);
        }
    }//GEN-LAST:event_tblKhachHangXoaMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbbLocNamNu;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JRadioButton rdoNam;
    private javax.swing.JRadioButton rdoNu;
    private javax.swing.JTable tblKhachHang;
    private javax.swing.JTable tblKhachHangXoa;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtHoTen;
    private javax.swing.JTextField txtIDKH;
    private javax.swing.JTextField txtMaKH;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtTimKhachHang;
    // End of variables declaration//GEN-END:variables
}
