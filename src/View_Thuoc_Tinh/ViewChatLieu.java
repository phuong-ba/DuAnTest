/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View_Thuoc_Tinh;

import Application.Formm.SanPham;
import Model.ChatLieu;
import Repository.ChatLieuRepo;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class ViewChatLieu extends javax.swing.JPanel {

    private JComboBox<String> cbbChatLieu;
    private ChatLieuRepo repoCL = new ChatLieuRepo();

    /**
     * Creates new form ViewChatLieu
     */
    public ViewChatLieu(JComboBox<String> cbbChatLieu) {
        this.cbbChatLieu = cbbChatLieu;
        initComponents();
        txtIDCL.setEditable(false);
        loadTable();

    }

    private void loadComboBoxChatLieu() {
        cbbChatLieu.removeAllItems(); // Xóa hết dữ liệu cũ
        List<ChatLieu> listCL = repoCL.getAll(); // Lấy danh sách chất liệu từ database

        for (ChatLieu cl : listCL) {
            cbbChatLieu.addItem(cl.getTenCL()); // Thêm từng chất liệu vào ComboBox
        }
    }

    public void loadTable() {
        DefaultTableModel mode = (DefaultTableModel) this.tblChatLieu.getModel();
        mode.setRowCount(0);
        List<ChatLieu> list = repoCL.getAll();
        for (ChatLieu chatLieu : list) {
            Object[] rowData = {
                chatLieu.getId(),
                chatLieu.getTenCL(),};
            mode.addRow(rowData);
        }
    }

    public void loadTableTimCL(String keyword) {
        DefaultTableModel mode = (DefaultTableModel) this.tblChatLieu.getModel();
        mode.setRowCount(0);
        List<ChatLieu> list = repoCL.getTimCl(keyword);
        for (ChatLieu chatLieu : list) {
            Object[] rowData = {
                chatLieu.getId(),
                chatLieu.getTenCL(),};
            mode.addRow(rowData);
        }
    }

    public void xoaFrom() {
        txtChatLieuView.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtViewTimCL = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtChatLieuView = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblChatLieu = new javax.swing.JTable();
        btnViewThemCL = new javax.swing.JButton();
        btnViewSuaCL = new javax.swing.JButton();
        btnViewXoaCL = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtIDCL = new javax.swing.JTextField();

        jLabel1.setText("Tìm kiếm");

        txtViewTimCL.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtViewTimCLKeyReleased(evt);
            }
        });

        jLabel2.setText("Chất Liệu");

        tblChatLieu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Chất Liệu", "Chất Liệu"
            }
        ));
        tblChatLieu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblChatLieuMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblChatLieu);

        btnViewThemCL.setText("Thêm");
        btnViewThemCL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewThemCLActionPerformed(evt);
            }
        });

        btnViewSuaCL.setText("Sửa");
        btnViewSuaCL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewSuaCLActionPerformed(evt);
            }
        });

        btnViewXoaCL.setText("Xóa");
        btnViewXoaCL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewXoaCLActionPerformed(evt);
            }
        });

        jLabel3.setText("ID Chất liệu");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtViewTimCL))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtIDCL)
                                    .addComponent(txtChatLieuView))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnViewThemCL)
                                .addGap(18, 18, 18)
                                .addComponent(btnViewSuaCL))
                            .addComponent(btnViewXoaCL))
                        .addGap(4, 4, 4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtViewTimCL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnViewThemCL)
                    .addComponent(btnViewSuaCL))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(16, 16, 16))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtChatLieuView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnViewXoaCL))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtIDCL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewThemCLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewThemCLActionPerformed
        try {
            String tenCL = txtChatLieuView.getText().trim();

            // Kiểm tra rỗng
            if (tenCL.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin!");
                return;
            }

            // Kiểm tra khoảng trắng liên tục
            if (tenCL.matches(".*\\s{2,}.*")) { // Kiểm tra nếu có 2 khoảng trắng liên tiếp
                JOptionPane.showMessageDialog(this, "Tên không được chứa khoảng trắng liên tục.");
                return;
            }

            // Kiểm tra có chứa số không
            if (tenCL.matches(".*\\d.*")) {
                JOptionPane.showMessageDialog(this, "Tên không được chứa số.");
                return;
            }

            // Kiểm tra ký tự đặc biệt (chỉ cho phép chữ cái + dấu cách)
            if (!tenCL.matches("^[a-zA-ZàáạảãâầấậẩẫăằắặẳẵèéẹẻẽêềếệểễìíịỉĩòóọỏõôồốộổỗơờớợởỡùúụủũưừứựửữỳýỵỷỹđÀÁẠẢÃÂẦẤẬẨẪĂẰẮẶẲẴÈÉẸẺẼÊỀẾỆỂỄÌÍỊỈĨÒÓỌỎÕÔỒỐỘỔỖƠỜỚỢỞỠÙÚỤỦŨƯỪỨỰỬỮỲÝỴỶỸĐ ]+$")) {
                JOptionPane.showMessageDialog(this, "Tên không được chứa ký tự đặc biệt.");
                return;
            }
            if (repoCL.checkTrung(tenCL)) {
                JOptionPane.showMessageDialog(this, "Tên chất liệu đã tông tại");
                return;
            }

            // Tạo đối tượng ChatLieu và thêm vào DB
            ChatLieu cl = new ChatLieu(tenCL);
            repoCL.add(cl); // Giả sử repoCL là lớp xử lý database           
            loadTable();  // Cập nhật lại bảng
            xoaFrom();  // Xóa dữ liệu nhập
            if (cbbChatLieu != null) {
                cbbChatLieu.addItem(tenCL);  // Thêm vào danh sách
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Có lỗi xảy ra khi thêm Chất Liệu: " + e.getMessage());
            e.printStackTrace(); // Hiển thị lỗi chi tiết trong console
        }
    }//GEN-LAST:event_btnViewThemCLActionPerformed

    private void btnViewSuaCLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewSuaCLActionPerformed
        try {
            int chonRow = tblChatLieu.getSelectedRow();
            if (chonRow == -1) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn Màu Sắc cần sửa!");
                return;
            }
            int id = Integer.parseInt(tblChatLieu.getValueAt(chonRow, 0).toString());
            String tenCL = txtChatLieuView.getText();
            if (tenCL.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin!");
                return;
            }
            if (tenCL.contains("  ")) {
                JOptionPane.showMessageDialog(this, "Họ tên không được chứa khoảng trắng liên tục.");
                return;
            }

            // Kiểm tra có chứa số không
            if (tenCL.matches(".*\\d.*")) {
                JOptionPane.showMessageDialog(this, "Tên không được chứa số.");
                return;
            }

            // Kiểm tra có chứa ký tự đặc biệt không (trừ dấu cách)
            if (!tenCL.matches("^[a-zA-ZàáạảãâầấậẩẫăằắặẳẵèéẹẻẽêềếệểễìíịỉĩòóọỏõôồốộổỗơờớợởỡùúụủũưừứựửữỳýỵỷỹđÀÁẠẢÃÂẦẤẬẨẪĂẰẮẶẲẴÈÉẸẺẼÊỀẾỆỂỄÌÍỊỈĨÒÓỌỎÕÔỒỐỘỔỖƠỜỚỢỞỠÙÚỤỦŨƯỪỨỰỬỮỲÝỴỶỸĐ ]+$")) {
                JOptionPane.showMessageDialog(this, "Tên không được chứa ký tự đặc biệt.");
                return;
            }
            if (repoCL.checkTrung(tenCL)) {
                JOptionPane.showMessageDialog(this, "Tên chất liệu đã tông tại");
                return;
            }
            ChatLieu cl = new ChatLieu(id, tenCL);
            this.repoCL.update(cl);
            loadTable();
            xoaFrom();
            if (cbbChatLieu != null) {
                cbbChatLieu.addItem(tenCL);  // Thêm vào danh sách
            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Có lỗi xảy ra khi cập nhật thông tin chất liệu! Vui lòng kiểm tra lại.");
        }
    }//GEN-LAST:event_btnViewSuaCLActionPerformed

    private void btnViewXoaCLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewXoaCLActionPerformed
        try {
            int chonRow = tblChatLieu.getSelectedRow();
            if (chonRow == -1) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn Chất Liệu cần xóa!");
                return;
            }

            int id;
            try {
                id = Integer.parseInt(tblChatLieu.getValueAt(chonRow, 0).toString());
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, "Lỗi: ID Chất Liệu không hợp lệ!");
                return;
            }

            // Xác nhận trước khi xóa
            int confirm = JOptionPane.showConfirmDialog(this,
                    "Bạn có chắc chắn muốn xóa chất liệu này?",
                    "Xác nhận xóa", JOptionPane.YES_NO_OPTION);

            if (confirm != JOptionPane.YES_OPTION) {
                return;
            }

            // Xóa nhân viên
            if (repoCL.delete(id)) {
                JOptionPane.showMessageDialog(this, "Xóa chất liệu thành công!");
                loadTable(); // Cập nhật lại bảng
                loadComboBoxChatLieu();
                xoaFrom();

            } else {
                JOptionPane.showMessageDialog(this, "Xóa chất liệu thất bại! Vui lòng kiểm tra lại.");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi hệ thống: " + e.getMessage());
            e.printStackTrace();
        }

    }//GEN-LAST:event_btnViewXoaCLActionPerformed

    private void txtViewTimCLKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtViewTimCLKeyReleased
        String timKiem = txtViewTimCL.getText().trim();
        loadTableTimCL(timKiem);
    }//GEN-LAST:event_txtViewTimCLKeyReleased

    private void tblChatLieuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblChatLieuMouseClicked
        try {
            int chon = tblChatLieu.getSelectedRow();
            if (chon != -1) {
                String id = tblChatLieu.getValueAt(chon, 0).toString();
                String tenCL = tblChatLieu.getValueAt(chon, 1).toString();

                txtIDCL.setText(id);
                txtChatLieuView.setText(tenCL);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_tblChatLieuMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnViewSuaCL;
    private javax.swing.JButton btnViewThemCL;
    private javax.swing.JButton btnViewXoaCL;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblChatLieu;
    private javax.swing.JTextField txtChatLieuView;
    private javax.swing.JTextField txtIDCL;
    private javax.swing.JTextField txtViewTimCL;
    // End of variables declaration//GEN-END:variables
}
