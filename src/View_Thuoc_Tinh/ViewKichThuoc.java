/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View_Thuoc_Tinh;

import Model.KichThuoc;
import Repository.KichThuocRepo;
import java.util.List;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class ViewKichThuoc extends javax.swing.JPanel {

    private JComboBox<String> cbbKichThuoc;
    private KichThuocRepo repoKT = new KichThuocRepo();

    public ViewKichThuoc(JComboBox<String> cbbKichThuoc) {
        this.cbbKichThuoc = cbbKichThuoc;
        initComponents();
        txtIDKT.setEditable(false);
        loadTable();
    }

    private void loadComboBoxChatLieu() {
        cbbKichThuoc.removeAllItems(); // Xóa hết dữ liệu cũ
        List<KichThuoc> listCL = repoKT.getAll(); // Lấy danh sách chất liệu từ database
        for (KichThuoc kt : listCL) {
            cbbKichThuoc.addItem(kt.getTenKT()); // Thêm từng chất liệu vào ComboBox
        }
    }

    public void loadTable() {
        DefaultTableModel mode = (DefaultTableModel) this.tblViewKichThuoc.getModel();
        mode.setRowCount(0);
        List<KichThuoc> list = repoKT.getAll();
        for (KichThuoc chatLieu : list) {
            Object[] rowData = {
                chatLieu.getId(),
                chatLieu.getTenKT(),};
            mode.addRow(rowData);
        }
    }

    public void loadTableTimCL(String keyword) {
        DefaultTableModel mode = (DefaultTableModel) this.tblViewKichThuoc.getModel();
        mode.setRowCount(0);
        List<KichThuoc> list = repoKT.getTimKT(keyword);
        for (KichThuoc chatLieu : list) {
            Object[] rowData = {
                chatLieu.getId(),
                chatLieu.getTenKT(),};
            mode.addRow(rowData);
        }
    }

    public void xoaFrom() {
        txtViewKichThuoc.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtViewTimKiem = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtViewKichThuoc = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblViewKichThuoc = new javax.swing.JTable();
        btnViewThemKT = new javax.swing.JButton();
        btnViewSuaKT = new javax.swing.JButton();
        btnXoaKT = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtIDKT = new javax.swing.JTextField();

        jLabel1.setText("Tìm kiếm");

        txtViewTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtViewTimKiemKeyReleased(evt);
            }
        });

        jLabel2.setText("Kích Thước");

        tblViewKichThuoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Kích Thước", "Kích Thước"
            }
        ));
        tblViewKichThuoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblViewKichThuocMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblViewKichThuoc);

        btnViewThemKT.setText("Thêm");
        btnViewThemKT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewThemKTActionPerformed(evt);
            }
        });

        btnViewSuaKT.setText("Sửa");
        btnViewSuaKT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewSuaKTActionPerformed(evt);
            }
        });

        btnXoaKT.setText("Xoa");
        btnXoaKT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaKTActionPerformed(evt);
            }
        });

        jLabel3.setText("ID Kich Thuoc");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addGap(18, 18, 18))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(15, 15, 15)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtIDKT, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtViewKichThuoc, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                                .addComponent(txtViewTimKiem)))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnViewThemKT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnXoaKT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnViewSuaKT)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtViewTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnViewThemKT)
                    .addComponent(btnViewSuaKT))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtViewKichThuoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXoaKT))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtIDKT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(44, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewThemKTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewThemKTActionPerformed
        try {
            String tenKT = txtViewKichThuoc.getText().trim();

            // Kiểm tra rỗng
            if (tenKT.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin!");
                return;
            }

            // Kiểm tra khoảng trắng liên tục
            if (tenKT.matches(".*\\s{2,}.*")) { // Kiểm tra nếu có 2 khoảng trắng liên tiếp
                JOptionPane.showMessageDialog(this, "Tên không được chứa khoảng trắng liên tục.");
                return;
            }

            // Kiểm tra có chứa chữ cái không
            if (tenKT.matches(".*[a-zA-Z].*")) {
                JOptionPane.showMessageDialog(this, "Kích thước chỉ được chứa số, không được chứa chữ cái.");
                return;
            }

            // Kiểm tra có chứa ký tự đặc biệt không (chỉ cho phép số)
            if (!tenKT.matches("\\d+")) {
                JOptionPane.showMessageDialog(this, "Kích thước chỉ được chứa số, không được chứa ký tự đặc biệt.");
                return;
            }
            // Kiểm tra size giày hợp lệ (28 - 46)
            int sizeGiay = Integer.parseInt(tenKT);
            if (sizeGiay < 28 || sizeGiay > 46) {
                JOptionPane.showMessageDialog(this, "Kích thước phải nằm trong khoảng 28 - 46.");
                return;
            }
            // check trung
            if (repoKT.checkTrung(tenKT)) {
                JOptionPane.showMessageDialog(this, "Kích thước đã tồn tại ");
                return;
            }

            // Tạo đối tượng và thêm vào DB
            KichThuoc kt = new KichThuoc(tenKT);
            repoKT.add(kt); // Giả sử repoCL là lớp xử lý database           
            loadTable();  // Cập nhật lại bảng
            xoaFrom();  // Xóa dữ liệu nhập
            if (cbbKichThuoc != null) {
                cbbKichThuoc.addItem(tenKT);  // Thêm vào danh sách
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Có lỗi xảy ra khi thêm Kich Thuoc: " + e.getMessage());
            e.printStackTrace(); // Hiển thị lỗi chi tiết trong console
        }
    }//GEN-LAST:event_btnViewThemKTActionPerformed

    private void btnViewSuaKTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewSuaKTActionPerformed
        try {
            int chonRow = tblViewKichThuoc.getSelectedRow();
            if (chonRow == -1) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn Kich Thuoc cần sửa!");
                return;
            }
            int id = Integer.parseInt(tblViewKichThuoc.getValueAt(chonRow, 0).toString());
            String tenKT = txtViewKichThuoc.getText();
            if (tenKT.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin!");
                return;
            }
            if (tenKT.contains("  ")) {
                JOptionPane.showMessageDialog(this, "tên không được chứa khoảng trắng liên tục.");
                return;
            }

            // Kiểm tra có chứa chữ cái không
            if (tenKT.matches(".*[a-zA-Z].*")) {
                JOptionPane.showMessageDialog(this, "Kích thước chỉ được chứa số, không được chứa chữ cái.");
                return;
            }

            // Kiểm tra có chứa ký tự đặc biệt không (chỉ cho phép số)
            if (!tenKT.matches("\\d+")) {
                JOptionPane.showMessageDialog(this, "Kích thước chỉ được chứa số, không được chứa ký tự đặc biệt.");
                return;
            }
            // Kiểm tra size giày hợp lệ (28 - 46)
            int sizeGiay = Integer.parseInt(tenKT);
            if (sizeGiay < 28 || sizeGiay > 46) {
                JOptionPane.showMessageDialog(this, "Kích thước phải nằm trong khoảng 28 - 46.");
                return;
            }
            if (repoKT.checkTrung(tenKT)) {
                JOptionPane.showMessageDialog(this, "Kích thước đã tồn tại ");
                return;
            }
            
            KichThuoc kt = new KichThuoc(id, tenKT);
            this.repoKT.update(kt);
            loadTable();
            xoaFrom();
            if (cbbKichThuoc != null) {
                cbbKichThuoc.addItem(tenKT);  // Thêm vào danh sách
            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Có lỗi xảy ra khi cập nhật thông tin Kich Thuoc! Vui lòng kiểm tra lại.");
        }
    }//GEN-LAST:event_btnViewSuaKTActionPerformed

    private void btnXoaKTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaKTActionPerformed
        try {
            int chonRow = tblViewKichThuoc.getSelectedRow();
            if (chonRow == -1) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn Kich Thuoc cần xóa!");
                return;
            }

            int id;
            try {
                id = Integer.parseInt(tblViewKichThuoc.getValueAt(chonRow, 0).toString());
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, "Lỗi: ID Kich Thuoc không hợp lệ!");
                return;
            }

            // Xác nhận trước khi xóa
            int confirm = JOptionPane.showConfirmDialog(this,
                    "Bạn có chắc chắn muốn xóa kich thuoc này?",
                    "Xác nhận xóa", JOptionPane.YES_NO_OPTION);

            if (confirm != JOptionPane.YES_OPTION) {
                return;
            }

            // Xóa nhân viên
            if (repoKT.delete(id)) {
                JOptionPane.showMessageDialog(this, "Xóa kich thuoc thành công!");
                loadTable(); // Cập nhật lại bảng
                loadComboBoxChatLieu();
                xoaFrom();

            } else {
                JOptionPane.showMessageDialog(this, "Xóa kich thuoc thất bại! Vui lòng kiểm tra lại.");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi hệ thống: " + e.getMessage());
            e.printStackTrace();
        }

    }//GEN-LAST:event_btnXoaKTActionPerformed

    private void tblViewKichThuocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblViewKichThuocMouseClicked
        try {
            int chon = tblViewKichThuoc.getSelectedRow();
            if (chon != -1) {
                String id = tblViewKichThuoc.getValueAt(chon, 0).toString();
                String tenKT = tblViewKichThuoc.getValueAt(chon, 1).toString();
                txtIDKT.setText(id);
                txtViewKichThuoc.setText(tenKT);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_tblViewKichThuocMouseClicked

    private void txtViewTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtViewTimKiemKeyReleased
        String timKiem = txtViewTimKiem.getText().trim();
        loadTableTimCL(timKiem);
    }//GEN-LAST:event_txtViewTimKiemKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnViewSuaKT;
    private javax.swing.JButton btnViewThemKT;
    private javax.swing.JButton btnXoaKT;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblViewKichThuoc;
    private javax.swing.JTextField txtIDKT;
    private javax.swing.JTextField txtViewKichThuoc;
    private javax.swing.JTextField txtViewTimKiem;
    // End of variables declaration//GEN-END:variables
}
