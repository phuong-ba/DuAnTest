/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View_Thuoc_Tinh;

import Model.MauSac;
import Repository.MauSacRepo;
import java.awt.Dimension;
import java.util.List;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class ViewMauSac extends javax.swing.JPanel {

    private JComboBox<String> cbbMauSac;
    private MauSacRepo repoMS = new MauSacRepo();

    public ViewMauSac(JComboBox<String> cbbMauSac) {
        this.cbbMauSac = cbbMauSac;
        initComponents();
        txtIDMS.setEditable(false);
        loadTable();
    }

    private void loadComboBoxChatLieu() {
        cbbMauSac.removeAllItems(); // Xóa hết dữ liệu cũ
        List<MauSac> listCL = repoMS.getAll(); // Lấy danh sách chất liệu từ database
        for (MauSac ms : listCL) {
            cbbMauSac.addItem(ms.getTenMau()); // Thêm từng chất liệu vào ComboBox
        }
    }

    public void loadTable() {
        DefaultTableModel mode = (DefaultTableModel) this.tblMauSac.getModel();
        mode.setRowCount(0);
        List<MauSac> list = repoMS.getAll();
        for (MauSac ms : list) {
            Object[] rowData = {
                ms.getId(),
                ms.getTenMau(),};
            mode.addRow(rowData);
        }
    }

    public void loadTableTimCL(String keyword) {
        DefaultTableModel mode = (DefaultTableModel) this.tblMauSac.getModel();
        mode.setRowCount(0);
        List<MauSac> list = repoMS.getTimKT(keyword);
        for (MauSac ms : list) {
            Object[] rowData = {
                ms.getId(),
                ms.getTenMau(),};
            mode.addRow(rowData);
        }
    }

    public void xoaFrom() {
        txtViewMS.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtViewTimMS = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtViewMS = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMauSac = new javax.swing.JTable();
        btnViewThemMS = new javax.swing.JButton();
        btnViewSuaMS = new javax.swing.JButton();
        btnViewXoaMS = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtIDMS = new javax.swing.JTextField();

        jLabel1.setText("Tìm Kiếm");

        txtViewTimMS.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtViewTimMSKeyReleased(evt);
            }
        });

        jLabel2.setText("Màu Sắc");

        tblMauSac.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID Màu Sắc", "Màu Sắc"
            }
        ));
        tblMauSac.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMauSacMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblMauSac);

        btnViewThemMS.setText("Thêm");
        btnViewThemMS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewThemMSActionPerformed(evt);
            }
        });

        btnViewSuaMS.setText("Sửa");
        btnViewSuaMS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewSuaMSActionPerformed(evt);
            }
        });

        btnViewXoaMS.setText("Xóa");
        btnViewXoaMS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewXoaMSActionPerformed(evt);
            }
        });

        jLabel3.setText("ID Mau Sac");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(13, 13, 13)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtViewTimMS)
                            .addComponent(txtViewMS, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnViewThemMS)
                                .addGap(18, 18, 18)
                                .addComponent(btnViewSuaMS, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnViewXoaMS)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtIDMS, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtViewTimMS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnViewThemMS)
                        .addComponent(btnViewSuaMS))
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtViewMS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnViewXoaMS)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtIDMS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewThemMSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewThemMSActionPerformed
        try {
            String tenMau = txtViewMS.getText().trim();

            // Kiểm tra rỗng
            if (tenMau.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin!");
                return;
            }

            // Kiểm tra khoảng trắng liên tục
            if (tenMau.matches(".*\\s{2,}.*")) { // Kiểm tra nếu có 2 khoảng trắng liên tiếp
                JOptionPane.showMessageDialog(this, "Tên không được chứa khoảng trắng liên tục.");
                return;
            }

            // Kiểm tra có chứa số không
            if (tenMau.matches(".*\\d.*")) {
                JOptionPane.showMessageDialog(this, "Tên không được chứa số.");
                return;
            }

            // Kiểm tra ký tự đặc biệt (chỉ cho phép chữ cái + dấu cách)
            if (!tenMau.matches("^[a-zA-ZàáạảãâầấậẩẫăằắặẳẵèéẹẻẽêềếệểễìíịỉĩòóọỏõôồốộổỗơờớợởỡùúụủũưừứựửữỳýỵỷỹđÀÁẠẢÃÂẦẤẬẨẪĂẰẮẶẲẴÈÉẸẺẼÊỀẾỆỂỄÌÍỊỈĨÒÓỌỎÕÔỒỐỘỔỖƠỜỚỢỞỠÙÚỤỦŨƯỪỨỰỬỮỲÝỴỶỸĐ ]+$")) {
                JOptionPane.showMessageDialog(this, "Tên không được chứa ký tự đặc biệt.");
                return;
            }
            if(repoMS.checkTrung(tenMau)){
                JOptionPane.showMessageDialog(this, "Màu Sắc đã tồn tại ");
                return;
            }

            // Tạo đối tượng ChatLieu và thêm vào DB
            MauSac kt = new MauSac(tenMau);
            repoMS.add(kt); // Giả sử repoCL là lớp xử lý database           
            loadTable();  // Cập nhật lại bảng
            xoaFrom();  // Xóa dữ liệu nhập
            if (cbbMauSac != null) {
                cbbMauSac.addItem(tenMau);  // Thêm vào danh sách
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Có lỗi xảy ra khi thêm Mau Sac: " + e.getMessage());
            e.printStackTrace(); // Hiển thị lỗi chi tiết trong console
        }
    }//GEN-LAST:event_btnViewThemMSActionPerformed

    private void btnViewSuaMSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewSuaMSActionPerformed
        try {
            int chonRow = tblMauSac.getSelectedRow();
            if (chonRow == -1) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn Mau Sac cần sửa!");
                return;
            }
            int id = Integer.parseInt(tblMauSac.getValueAt(chonRow, 0).toString());
            String tenMau = txtViewMS.getText();
            if (tenMau.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin!");
                return;
            }
            if (tenMau.contains("  ")) {
                JOptionPane.showMessageDialog(this, "tên không được chứa khoảng trắng liên tục.");
                return;
            }

            // Kiểm tra có chứa số không
            if (tenMau.matches(".*\\d.*")) {
                JOptionPane.showMessageDialog(this, "Tên không được chứa số.");
                return;
            }

            // Kiểm tra có chứa ký tự đặc biệt không (trừ dấu cách)
            if (!tenMau.matches("^[a-zA-ZàáạảãâầấậẩẫăằắặẳẵèéẹẻẽêềếệểễìíịỉĩòóọỏõôồốộổỗơờớợởỡùúụủũưừứựửữỳýỵỷỹđÀÁẠẢÃÂẦẤẬẨẪĂẰẮẶẲẴÈÉẸẺẼÊỀẾỆỂỄÌÍỊỈĨÒÓỌỎÕÔỒỐỘỔỖƠỜỚỢỞỠÙÚỤỦŨƯỪỨỰỬỮỲÝỴỶỸĐ ]+$")) {
                JOptionPane.showMessageDialog(this, "Tên không được chứa ký tự đặc biệt.");
                return;
            }
            if(repoMS.checkTrung(tenMau)){
                JOptionPane.showMessageDialog(this, "Màu Sắc đã tồn tại");
                return;
            }
            
            MauSac kt = new MauSac(id, tenMau);
            this.repoMS.update(kt);
            loadTable();
            xoaFrom();
            if (cbbMauSac != null) {
                cbbMauSac.addItem(tenMau);  // Thêm vào danh sách
            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Có lỗi xảy ra khi cập nhật thông tin Mau Sac! Vui lòng kiểm tra lại.");
        }
    }//GEN-LAST:event_btnViewSuaMSActionPerformed

    private void btnViewXoaMSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewXoaMSActionPerformed
        try {
            int chonRow = tblMauSac.getSelectedRow();
            if (chonRow == -1) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn Mau Sac cần xóa!");
                return;
            }

            int id;
            try {
                id = Integer.parseInt(tblMauSac.getValueAt(chonRow, 0).toString());
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, "Lỗi: ID Mau Sac không hợp lệ!");
                return;
            }

            // Xác nhận trước khi xóa
            int confirm = JOptionPane.showConfirmDialog(this,
                    "Bạn có chắc chắn muốn xóa mau sac này?",
                    "Xác nhận xóa", JOptionPane.YES_NO_OPTION);

            if (confirm != JOptionPane.YES_OPTION) {
                return;
            }

            // Xóa nhân viên
            if (repoMS.delete(id)) {
                JOptionPane.showMessageDialog(this, "Xóa mau sac thành công!");
                loadTable(); // Cập nhật lại bảng
                loadComboBoxChatLieu();
                xoaFrom();

            } else {
                JOptionPane.showMessageDialog(this, "Xóa mau sac thất bại! Vui lòng kiểm tra lại.");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi hệ thống: " + e.getMessage());
            e.printStackTrace();
        }

    }//GEN-LAST:event_btnViewXoaMSActionPerformed

    private void tblMauSacMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMauSacMouseClicked
        try {
            int chon = tblMauSac.getSelectedRow();
            if (chon != -1) {
                String id = tblMauSac.getValueAt(chon, 0).toString();
                String tenMS = tblMauSac.getValueAt(chon, 1).toString();
                txtIDMS.setText(id);
                txtViewMS.setText(tenMS);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_tblMauSacMouseClicked

    private void txtViewTimMSKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtViewTimMSKeyReleased
        String timKiem = txtViewTimMS.getText().trim();
        loadTableTimCL(timKiem);
    }//GEN-LAST:event_txtViewTimMSKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnViewSuaMS;
    private javax.swing.JButton btnViewThemMS;
    private javax.swing.JButton btnViewXoaMS;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblMauSac;
    private javax.swing.JTextField txtIDMS;
    private javax.swing.JTextField txtViewMS;
    private javax.swing.JTextField txtViewTimMS;
    // End of variables declaration//GEN-END:variables
}
